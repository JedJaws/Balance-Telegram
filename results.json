{"visibility": "visible", "stdout_visibility": "visible", "tests": [{"score": 3, "max_score": 3, "name": "TODO comments removed", "output": "", "visibility": "visible"}, {"score": 3, "max_score": 3, "name": "run_length_encode_trivial_cases", "output": "", "visibility": "visible"}, {"score": 3, "max_score": 3, "name": "run_length_encode_error_handling", "output": "", "visibility": "visible"}, {"score": 3, "max_score": 3, "name": "run_length_encode_just_one_run", "output": "", "visibility": "visible"}, {"score": 3, "max_score": 3, "name": "run_length_encode_mixture", "output": "", "visibility": "visible"}, {"score": 6, "max_score": 6, "name": "longest_frequent_substring_trivial_cases", "output": "", "visibility": "visible"}, {"score": 6, "max_score": 6, "name": "longest_frequent_substring_nontrivial_cases", "output": "", "visibility": "visible"}, {"score": 0, "max_score": 2, "name": "reformat_date_pattern_1", "output": "algorithms_test.cpp:284\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2022-2-3\")\n    Which is: \"2022-2-3\"algorithms_test.cpp:285\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2022-02-3\")\n    Which is: \"2022-02-3\"algorithms_test.cpp:286\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2022-2-03\")\n    Which is: \"2022-2-03\"algorithms_test.cpp:289\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\" 2022-02-03\")\n    Which is: \"-0-2022-02-03\"algorithms_test.cpp:290\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"  2022-02-03\")\n    Which is: \"-0- 2022-02-03\"algorithms_test.cpp:291\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"   2022-02-03\")\n    Which is: \"-0-  2022-02-03\"algorithms_test.cpp:292\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"    2022-02-03\")\n    Which is: \"-0-   2022-02-03\"algorithms_test.cpp:293\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"     2022-02-03\")\n    Which is: \"-0-    2022-02-03\"algorithms_test.cpp:296\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2022-02-03 \")\n    Which is: \"2022-02-03 \"algorithms_test.cpp:297\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2022-02-03  \")\n    Which is: \"2022-02-03  \"algorithms_test.cpp:298\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2022-02-03   \")\n    Which is: \"2022-02-03   \"algorithms_test.cpp:299\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2022-02-03    \")\n    Which is: \"2022-02-03    \"algorithms_test.cpp:300\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2022-02-03     \")\n    Which is: \"2022-02-03     \"", "visibility": "visible"}, {"score": 0, "max_score": 2, "name": "reformat_date_pattern_2", "output": "algorithms_test.cpp:305\nExpected equality of these values:\n  \"2000-01-01\"\n  algorithms::reformat_date(\"01/01/2000\")\n    Which is: \"20002000-0101-0101\"algorithms_test.cpp:306\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"02/03/2022\")\n    Which is: \"20222022-0202-0303\"algorithms_test.cpp:309\nExpected equality of these values:\n  \"1900-02-02\"\n  algorithms::reformat_date(\"02/02/1900\")\n    Which is: \"19001900-0202-0202\"algorithms_test.cpp:310\nExpected equality of these values:\n  \"2099-02-02\"\n  algorithms::reformat_date(\"02/02/2099\")\n    Which is: \"20992099-0202-0202\"algorithms_test.cpp:313\nExpected equality of these values:\n  \"2022-01-02\"\n  algorithms::reformat_date(\"01/02/2022\")\n    Which is: \"20222022-0101-0202\"algorithms_test.cpp:314\nExpected equality of these values:\n  \"2022-12-02\"\n  algorithms::reformat_date(\"12/02/2022\")\n    Which is: \"20222022-1212-0202\"algorithms_test.cpp:317\nExpected equality of these values:\n  \"2022-02-01\"\n  algorithms::reformat_date(\"02/01/2022\")\n    Which is: \"20222022-0202-0101\"algorithms_test.cpp:318\nExpected equality of these values:\n  \"2022-02-31\"\n  algorithms::reformat_date(\"02/31/2022\")\n    Which is: \"20222022-0202-3131\"algorithms_test.cpp:321\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2/3/2022\")\n    Which is: \"20222022-22-33\"algorithms_test.cpp:322\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"02/3/2022\")\n    Which is: \"20222022-0202-33\"algorithms_test.cpp:323\nExpected equality of these values:\n  \"2022-02-03\"\n  algorithms::reformat_date(\"2/03/2022\")\n    Which is: \"20222022-22-0303\"", "visibility": "visible"}, {"score": 0, "max_score": 2, "name": "reformat_date_pattern_3", "output": "unknown file\nC++ exception with description \"Invalid Argument.\" thrown in the test body.", "visibility": "visible"}, {"score": 0, "max_score": 2, "name": "reformat_date_pattern_4", "output": "unknown file\nC++ exception with description \"Invalid Argument.\" thrown in the test body.", "visibility": "visible"}, {"score": 0, "max_score": 2, "name": "reformat_invalid_format", "output": "algorithms_test.cpp:395\nExpected: algorithms::reformat_date(\"\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:396\nExpected: algorithms::reformat_date(\"    \") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:397\nExpected: algorithms::reformat_date(\"the quick brown fox\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:400\nExpected: algorithms::reformat_date(\"abc2001-05-10\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:401\nExpected: algorithms::reformat_date(\"abc05/10/2001\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:405\nExpected: algorithms::reformat_date(\"2001-05-10abc\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:406\nExpected: algorithms::reformat_date(\"05/10/2001abc\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:410\nExpected: algorithms::reformat_date(\"2000-01-01-01\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:411\nExpected: algorithms::reformat_date(\"01/01/01/2000\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:415\nExpected: algorithms::reformat_date(\"2000-01\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:416\nExpected: algorithms::reformat_date(\"2000\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:417\nExpected: algorithms::reformat_date(\"01/2000\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:418\nExpected: algorithms::reformat_date(\"2000\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:419\nExpected: algorithms::reformat_date(\"28, 2021\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:420\nExpected: algorithms::reformat_date(\"january, 2021\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:421\nExpected: algorithms::reformat_date(\"january 28\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:424\nExpected: algorithms::reformat_date(\"abcd-01-01\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:425\nExpected: algorithms::reformat_date(\"2000-ab-01\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:426\nExpected: algorithms::reformat_date(\"2000-01-ab\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:427\nExpected: algorithms::reformat_date(\"ab/01/2000\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:428\nExpected: algorithms::reformat_date(\"01/ab/2000\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:429\nExpected: algorithms::reformat_date(\"01/01/abcd\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:434\nExpected: algorithms::reformat_date(\"-01-01\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:435\nExpected: algorithms::reformat_date(\"2000--01\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:436\nExpected: algorithms::reformat_date(\"2000-01-\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:437\nExpected: algorithms::reformat_date(\"/01/01\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:438\nExpected: algorithms::reformat_date(\"2000//01\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:439\nExpected: algorithms::reformat_date(\"2000/01/\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:440\nExpected: algorithms::reformat_date(\", 2021\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:441\nExpected: algorithms::reformat_date(\"january 28,\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.", "visibility": "visible"}, {"score": 0, "max_score": 2, "name": "reformat_invalid_field", "output": "algorithms_test.cpp:459\nExpected: algorithms::reformat_date(\"1899-07-22\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:460\nExpected: algorithms::reformat_date(\"07/22/1899\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:462\nExpected: algorithms::reformat_date(\"999-07-22\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:463\nExpected: algorithms::reformat_date(\"07/22/999\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:465\nExpected: algorithms::reformat_date(\"0-07-22\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:466\nExpected: algorithms::reformat_date(\"07/22/0\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:470\nExpected: algorithms::reformat_date(\"2100-07-22\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:471\nExpected: algorithms::reformat_date(\"07/22/2100\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:473\nExpected: algorithms::reformat_date(\"5000-07-22\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:474\nExpected: algorithms::reformat_date(\"07/22/5000\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:478\nExpected: algorithms::reformat_date(\"2010-00-22\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:479\nExpected: algorithms::reformat_date(\"00/22/2010\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:482\nExpected: algorithms::reformat_date(\"2010-13-22\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:483\nExpected: algorithms::reformat_date(\"13/22/2010\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:484\nExpected: algorithms::reformat_date(\"2010-100-22\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:485\nExpected: algorithms::reformat_date(\"100/22/2010\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:488\nExpected: algorithms::reformat_date(\"2010-07-0\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:489\nExpected: algorithms::reformat_date(\"07/00/2010\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:493\nExpected: algorithms::reformat_date(\"2010-07-32\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:494\nExpected: algorithms::reformat_date(\"07/32/2010\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:496\nExpected: algorithms::reformat_date(\"2010-07-100\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.algorithms_test.cpp:497\nExpected: algorithms::reformat_date(\"07/100/2010\") throws an exception of type std::invalid_argument.\n  Actual: it throws nothing.", "visibility": "visible"}]}